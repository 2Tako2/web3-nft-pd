/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PopCat,
  PopCatInterface,
} from "../../../contracts/implementations/PopCat";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExceedingMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ForbiddenZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTotalSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenIdNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "SuccessfulMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UriUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenUriBase",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateTokenUriBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f4938038062001f4983398101604081905262000034916200028e565b6040518060400160405280600c81526020016b141bdc141bdc141bdc10d85d60a21b81525060405180604001604052806002815260200161504360f01b8152506200008e620000886200015960201b60201c565b6200015d565b60016200009c83826200036f565b506002620000ab82826200036f565b5050506001600160a01b038216620000d65760405163d2fd945360e01b815260040160405180910390fd5b80600003620000f8576040516334bbd58560e01b815260040160405180910390fd5b6001600160a01b038216331462000114576200011482620001ad565b60078190556000600855600a805460ff191690556040805160608101909152603580825262001f1460208301396009906200015090826200036f565b5050506200043b565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001b762000230565b6001600160a01b038116620002225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200022d816200015d565b50565b6000546001600160a01b031633146200028c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000219565b565b60008060408385031215620002a257600080fd5b82516001600160a01b0381168114620002ba57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002f557607f821691505b6020821081036200031657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036a57600081815260208120601f850160051c81016020861015620003455750805b601f850160051c820191505b81811015620003665782815560010162000351565b5050505b505050565b81516001600160401b038111156200038b576200038b620002ca565b620003a3816200039c8454620002e0565b846200031c565b602080601f831160018114620003db5760008415620003c25750858301515b600019600386901b1c1916600185901b17855562000366565b600085815260208120601f198616915b828110156200040c57888601518255948401946001909101908401620003eb565b50858210156200042b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ac9806200044b6000396000f3fe6080604052600436106101705760003560e01c806370a08231116100d6578063a22cb4651161007f578063e8a3d48511610059578063e8a3d485146103ea578063e985e9c5146103ff578063f2fde38b1461044857600080fd5b8063a22cb4651461038a578063b88d4fde146103aa578063c87b56dd146103ca57600080fd5b80638da5cb5b116100b05780638da5cb5b1461034157806395d89b411461035f5780639f181b5e1461037457600080fd5b806370a08231146102ec578063715018a61461030c578063722231241461032157600080fd5b806323b872dd11610138578063540c2a9711610112578063540c2a97146102a45780636352211e146102b95780636a627842146102d957600080fd5b806323b872dd1461024a57806342842e0e1461026a578063518302271461028a57600080fd5b806301ffc9a71461017557806306fdde03146101aa578063081812fc146101cc578063095ea7b31461020457806318160ddd14610226575b600080fd5b34801561018157600080fd5b5061019561019036600461146f565b610468565b60405190151581526020015b60405180910390f35b3480156101b657600080fd5b506101bf6104ba565b6040516101a191906114e3565b3480156101d857600080fd5b506101ec6101e73660046114f6565b61054c565b6040516001600160a01b0390911681526020016101a1565b34801561021057600080fd5b5061022461021f36600461152b565b610573565b005b34801561023257600080fd5b5061023c60075481565b6040519081526020016101a1565b34801561025657600080fd5b50610224610265366004611555565b6106ab565b34801561027657600080fd5b50610224610285366004611555565b610723565b34801561029657600080fd5b50600a546101959060ff1681565b3480156102b057600080fd5b506101bf61073e565b3480156102c557600080fd5b506101ec6102d43660046114f6565b6107cc565b6102246102e7366004611591565b610831565b3480156102f857600080fd5b5061023c610307366004611591565b6108e9565b34801561031857600080fd5b5061022461096f565b34801561032d57600080fd5b5061022461033c3660046115ac565b610983565b34801561034d57600080fd5b506000546001600160a01b03166101ec565b34801561036b57600080fd5b506101bf6109aa565b34801561038057600080fd5b5061023c60085481565b34801561039657600080fd5b506102246103a536600461161e565b6109b9565b3480156103b657600080fd5b506102246103c5366004611670565b6109c8565b3480156103d657600080fd5b506101bf6103e53660046114f6565b610a47565b3480156103f657600080fd5b506101bf610b3a565b34801561040b57600080fd5b5061019561041a36600461174c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561045457600080fd5b50610224610463366004611591565b610b56565b60006001600160e01b031982166380ac58cd60e01b148061049957506001600160e01b03198216635b5e139f60e01b145b806104b457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546104c99061177f565b80601f01602080910402602001604051908101604052809291908181526020018280546104f59061177f565b80156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b600061055782610bcf565b506000908152600560205260409020546001600160a01b031690565b600061057e826107cc565b9050806001600160a01b0316836001600160a01b0316036105f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061062a57506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b61069c5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105e7565b6106a68383610c33565b505050565b6106b53382610ca1565b6107185760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016105e7565b6106a6838383610d20565b6106a6838383604051806020016040528060008152506109c8565b6009805461074b9061177f565b80601f01602080910402602001604051908101604052809291908181526020018280546107779061177f565b80156107c45780601f10610799576101008083540402835291602001916107c4565b820191906000526020600020905b8154815290600101906020018083116107a757829003601f168201915b505050505081565b6000818152600360205260408120546001600160a01b0316806104b45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016105e7565b6001600160a01b0381166108585760405163d2fd945360e01b815260040160405180910390fd5b6007546008541061087c57604051634c0116c960e11b815260040160405180910390fd5b60016008600082825461088f91906117cf565b925050819055506108a281600854610ebc565b600854604080519182526001600160a01b03831660208301527f527efdb0e41693cd8cbb9c6d2d35c8563b7b73cfdd0790d7d2588c893b91b8c6910160405180910390a150565b60006001600160a01b0382166109535760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105e7565b506001600160a01b031660009081526004602052604090205490565b610977610ffe565b6109816000611058565b565b61098b610ffe565b6009610998828483611830565b5050600a805460ff1916600117905550565b6060600280546104c99061177f565b6109c43383836110a8565b5050565b6109d23383610ca1565b610a355760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016105e7565b610a4184848484611176565b50505050565b6060600754821115610a6c57604051637ec8def360e11b815260040160405180910390fd5b600a5460ff16610b085760098054610a839061177f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf9061177f565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b50505050509050919050565b6009610b13836111f4565b604051602001610b249291906118f1565b6040516020818303038152906040529050919050565b604051806060016040528060358152602001611a5f6035913981565b610b5e610ffe565b6001600160a01b038116610bc35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e7565b610bcc81611058565b50565b6000818152600360205260409020546001600160a01b0316610bcc5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016105e7565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c68826107cc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cad836107cc565b9050806001600160a01b0316846001600160a01b03161480610cf457506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610d185750836001600160a01b0316610d0d8461054c565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d33826107cc565b6001600160a01b031614610d975760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105e7565b6001600160a01b038216610df95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e7565b610e04600082610c33565b6001600160a01b0383166000908152600460205260408120805460019290610e2d908490611985565b90915550506001600160a01b0382166000908152600460205260408120805460019290610e5b9084906117cf565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610f125760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e7565b6000818152600360205260409020546001600160a01b031615610f775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105e7565b6001600160a01b0382166000908152600460205260408120805460019290610fa09084906117cf565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000546001600160a01b031633146109815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036111095760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105e7565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611181848484610d20565b61118d8484848461130d565b610a415760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105e7565b60608160000361121b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611245578061122f81611998565b915061123e9050600a836119c7565b915061121f565b60008167ffffffffffffffff8111156112605761126061165a565b6040519080825280601f01601f19166020018201604052801561128a576020820181803683370190505b5090505b8415610d185761129f600183611985565b91506112ac600a866119db565b6112b79060306117cf565b60f81b8183815181106112cc576112cc6119ef565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611306600a866119c7565b945061128e565b60006001600160a01b0384163b1561144e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611351903390899088908890600401611a05565b6020604051808303816000875af192505050801561138c575060408051601f3d908101601f1916820190925261138991810190611a41565b60015b611434573d8080156113ba576040519150601f19603f3d011682016040523d82523d6000602084013e6113bf565b606091505b50805160000361142c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d18565b506001949350505050565b6001600160e01b031981168114610bcc57600080fd5b60006020828403121561148157600080fd5b813561148c81611459565b9392505050565b60005b838110156114ae578181015183820152602001611496565b50506000910152565b600081518084526114cf816020860160208601611493565b601f01601f19169290920160200192915050565b60208152600061148c60208301846114b7565b60006020828403121561150857600080fd5b5035919050565b80356001600160a01b038116811461152657600080fd5b919050565b6000806040838503121561153e57600080fd5b6115478361150f565b946020939093013593505050565b60008060006060848603121561156a57600080fd5b6115738461150f565b92506115816020850161150f565b9150604084013590509250925092565b6000602082840312156115a357600080fd5b61148c8261150f565b600080602083850312156115bf57600080fd5b823567ffffffffffffffff808211156115d757600080fd5b818501915085601f8301126115eb57600080fd5b8135818111156115fa57600080fd5b86602082850101111561160c57600080fd5b60209290920196919550909350505050565b6000806040838503121561163157600080fd5b61163a8361150f565b91506020830135801515811461164f57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561168657600080fd5b61168f8561150f565b935061169d6020860161150f565b925060408501359150606085013567ffffffffffffffff808211156116c157600080fd5b818701915087601f8301126116d557600080fd5b8135818111156116e7576116e761165a565b604051601f8201601f19908116603f0116810190838211818310171561170f5761170f61165a565b816040528281528a602084870101111561172857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561175f57600080fd5b6117688361150f565b91506117766020840161150f565b90509250929050565b600181811c9082168061179357607f821691505b6020821081036117b357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104b4576104b46117b9565b601f8211156106a657600081815260208120601f850160051c810160208610156118095750805b601f850160051c820191505b8181101561182857828155600101611815565b505050505050565b67ffffffffffffffff8311156118485761184861165a565b61185c83611856835461177f565b836117e2565b6000601f84116001811461189057600085156118785750838201355b600019600387901b1c1916600186901b1783556118ea565b600083815260209020601f19861690835b828110156118c157868501358255602094850194600190920191016118a1565b50868210156118de5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008084546118ff8161177f565b60018281168015611917576001811461192c5761195b565b60ff198416875282151583028701945061195b565b8860005260208060002060005b858110156119525781548a820152908401908201611939565b50505082870194505b50602f60f81b8452865192506119778382860160208a01611493565b919092010195945050505050565b818103818111156104b4576104b46117b9565b6000600182016119aa576119aa6117b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826119d6576119d66119b1565b500490565b6000826119ea576119ea6119b1565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152611a3760808301846114b7565b9695505050505050565b600060208284031215611a5357600080fd5b815161148c8161145956fe697066733a2f2f516d62654541553462445641664376724431697a6f7a5a51344a723265745a4c6a6a72617966784770516f394c6ea2646970667358221220e80c7911da8962592eec1234ff2967b1ab3c64f61142e915c08faff531ff9d6564736f6c63430008110033697066733a2f2f516d5276787648715935764b676e42656747735973636933395167706d6b50324235326a47636271787072583271";

type PopCatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PopCatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PopCat__factory extends ContractFactory {
  constructor(...args: PopCatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ownerAddress: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PopCat> {
    return super.deploy(
      _ownerAddress,
      _totalSupply,
      overrides || {}
    ) as Promise<PopCat>;
  }
  override getDeployTransaction(
    _ownerAddress: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ownerAddress,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): PopCat {
    return super.attach(address) as PopCat;
  }
  override connect(signer: Signer): PopCat__factory {
    return super.connect(signer) as PopCat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PopCatInterface {
    return new utils.Interface(_abi) as PopCatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PopCat {
    return new Contract(address, _abi, signerOrProvider) as PopCat;
  }
}
