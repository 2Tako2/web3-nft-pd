/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPopCat,
  IPopCatInterface,
} from "../../../contracts/interfaces/IPopCat";

const _abi = [
  {
    inputs: [],
    name: "ExceedingMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ForbiddenZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTotalSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenIdNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "SuccessfulMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UriUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateTokenUriBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPopCat__factory {
  static readonly abi = _abi;
  static createInterface(): IPopCatInterface {
    return new utils.Interface(_abi) as IPopCatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPopCat {
    return new Contract(address, _abi, signerOrProvider) as IPopCat;
  }
}
